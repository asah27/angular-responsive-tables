{
  "name": "Angular Responsive Tables",
  "tagline": "Make your HTML tables look great on every device",
  "body": "# angular-responsive-tables\r\n\r\nMake your HTML tables look great on every device. \r\nCompatible with **AngularJS 1.3.4+**. \r\n\r\n[Live Demo](http://awerlang.github.io/angular-responsive-tables/examples/)\r\n\r\n## Why?\r\n\r\nCurrently, browsers for mobile devices like smartphones doesn't do anything to have a proper presentation of tables,\r\n and then scrollbars will show up and ruin your design.\r\n\r\nIn the search of a solution to this problem I have found many different approaches. Some of them\r\n still rely on horizontal scrollbars. While I believe this layout could be useful for some use cases, \r\n I felt that a default solution should avoid horizontal scrollbars entirely. Then I came up with this\r\n highly reusable directive.\r\n\r\nAll this work is based on the following assumptions:\r\n\r\n* If it is *flexible*, then it would solve most problems, even ones not aimed by the library author's;\r\n* Focusing on the task of *adding responsiveness*, in order to accomplish a greater objective (*easy to use tabular data*);\r\n* Do work with a *standard HTML table*, not requiring any extraneous markup;\r\n* Do *not change default tabular layout* unless a smaller display is detected;\r\n* Provide *convenience* without sacrificing flexibility;\r\n* By keeping *code base simple*, it is easier to reason about and evolve;\r\n* By fully covering with tests, it can *evolve without introducing bugs*.\r\n\r\n## Features\r\n\r\n* Angular native implementation compatible with 1.3.4+;\r\n* Keep things DRY;\r\n* Supports static and dynamic (ng-repeat) rows;\r\n* Easy to apply any style on top of it;\r\n* Works with any base CSS framework; \r\n* Should integrate seamlessly with any table component you might choose to use.\r\n\r\n### Future Work\r\n\r\n* Choose what columns to show/hide according to a given screen resolution;\r\n* Choose when it would be best to hide columns or collapse all columns;\r\n* Define a header and/or custom template for collapsed columns/row;\r\n* Allow collapse/expand column details. \r\n\r\n## Usage\r\n\r\n    <table wt-responsive-table>\r\n        <tr>\r\n            <th>Column 1</th>\r\n            <th>Column 2</th>\r\n            <th>Column 3</th>\r\n            <th>Column 4</th>\r\n        </tr>\r\n        <tr>\r\n            <td>...</td>\r\n            <td>...</td>\r\n            <td>...</td>\r\n            <td>...</td>\r\n        </tr>\r\n        <tr>\r\n            <td>...</td>\r\n            <td>...</td>\r\n            <td>...</td>\r\n            <td>...</td>\r\n        </tr>\r\n        <tr>\r\n            <td>...</td>\r\n            <td>...</td>\r\n            <td>...</td>\r\n            <td>...</td>\r\n        </tr>\r\n    </table>\r\n\r\n### Directives\r\n\r\n#### wt-responsive-table\r\n\r\n * table: wt-responsive-table\r\n   * td: responsive-omit-title: title should be ommited\r\n   * td: responsive-omit-if-empty: no row for empty cells\r\n\r\n## Installation\r\n\r\n### Bower\r\n\r\n    bower install angular-responsive-tables --save\r\n\r\n### Application\r\n\r\n#### HTML\r\n\r\n    <link rel=\"stylesheet\" href=\"release/angular-responsive-tables.min.css\"></script>\r\n    <script type=\"text/javascript\" src=\"release/angular-responsive-tables.min.js\"></script>\r\n\r\n#### JavaScript\r\n\r\n    var app = angular.module('app', ['wt.responsive']);\r\n\r\n## Credits\r\n\r\nCSS based on original work by Chris Coyier (http://css-tricks.com/responsive-data-tables/). In this article, he covers approaches to responsive tables. I modified it to work around CSS specificity and to keep things DRY.\r\n\r\n## License\r\n\r\nMIT\r\n",
  "google": "UA-63176420-1",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}